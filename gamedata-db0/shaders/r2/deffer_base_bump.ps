//TB3D 109993 Adapted from Meltac 2.0 DX11 shaders
#include "common.h"
#include "sload.h"

#ifdef DX11
f_deffer main(p_bumped I) {
f_deffer O;
surface_bumped S=sload(I);

//float4 lm2=tex2D(s_hemi,I.M1);
//if (lm2.x * lm2.y * lm2.z * lm2.w  < 0.0000001)
//#ifdef USE_PARALLAX

//#endif

float3 Ne=mul(float3x3(I.M1,I.M2,I.M3),S.normal);
Ne=normalize(Ne);
float ms=xmaterial;
#ifdef USE_LM_HEMI
float4 lm=tex2D(s_hemi,I.lmh);
#ifndef USE_F32
float h=dot(lm.rgb,1.h/3.h);
#else
float h=dot(lm.rgb,1.h/4.h);
#endif
#ifdef USE_R2_STATIC_SUN
ms=lm.w;
#endif
#else
float h=I.position.w;
#ifdef USE_R2_STATIC_SUN
ms=I.tcdh.w;
#endif
#endif
O.Ne=float4(Ne,h);
O.position=float4(I.position.xyz+Ne*S.height*def_virtualh,ms);
O.C=float4(S.base.xyz,S.gloss);
return O;
}

#else

f_deffer main(p_bumped I) {
f_deffer O;
surface_bumped S=sload(I);
half3 Ne=mul(half3x3(I.M1,I.M2,I.M3),S.normal);
Ne=normalize(Ne);
half ms=xmaterial;
#ifdef USE_LM_HEMI
half4 lm=tex2D(s_hemi,I.lmh);
#ifndef USE_F32
half h=dot(lm.rgb,1.h/3.h);
#else
half h=dot(lm.rgb,1.h/4.h);
#endif
#ifdef USE_R2_STATIC_SUN
ms=lm.w;
# endif
#else
half h=I.position.w;
#ifdef USE_R2_STATIC_SUN
ms=I.tcdh.w;
#endif
#endif
O.Ne=half4(Ne,h);
O.position=half4(I.position.xyz+Ne*S.height*def_virtualh,ms);
O.C=half4(S.base.xyz,S.gloss);
return O;
}

#endif