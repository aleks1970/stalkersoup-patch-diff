--TB3D 1.0.9.9.4.5  removed upd, changed addrs to addx as addrs is a quest item, is_pleer
function my_ver() return "1.0.9.9.4.5" end

--\\"NanoEkzoSkelet Skat-15M "" .. With the system of life support (SZHP) and upgradeable .. Spot (Shooter)..

local f_1 = false
local f_1_end = false

local f_2 = false
local f_2_end = false

local f_3 = false
local f_3_end = false

local f_4 = false
local f_4_end = false

--is_pleer = false

local con_skat_1 = 1
local con_skat_2 = 1
local con_skat_3 = 1
local con_skat_4 = 1 -- DMX UPGRADE

local flag_skat_1 = false
local flag_skat_2 = false
local flag_skat_3 = false
local flag_skat_4 = false -- DMX UPGRADE

function on_actor_update()
--	on_sub_actor_update()	
	local outfit = db.actor:item_in_slot(6)
	--if not is_pleer then
		--player_ogg.start_pleer_post_save()
		--is_pleer = true
	--end
	if outfit and string.find(outfit:section(), "exo_mil_exoskeleton_") then
		local suit_type = 0
		if flag_skat_1 then		
			local e_up1 = db.actor:object("exo_mil_exoskeleton_add")
			if e_up1 then
				e_up1:set_condition(con_skat_1)
				suit_type = 1
			end
			flag_skat_1 = false
		elseif flag_skat_2 then		
			local e_up2 = db.actor:object("exo_mil_exoskeleton_addr")
			if e_up2 then
				e_up2:set_condition(con_skat_2)
				suit_type = 2
			end
			flag_skat_2 = false
		elseif flag_skat_3 then		
			local e_up3 = db.actor:object("exo_mil_exoskeleton_addx")
			if e_up3 then
				e_up3:set_condition(con_skat_3)
				suit_type = 3
			end
			flag_skat_3 = false
		elseif flag_skat_4 then		-- DMX UPGRADE ON
			local e_up4 = db.actor:object("exo_mil_exoskeleton_dmx")
			if e_up4 then
				e_up4:set_condition(con_skat_4)
				suit_type = 4
			end
			flag_skat_4 = false     -- DMX UPGRADE OFF
		end
		if amk.load_variable("tb3d_acumm_use", 0) > 0 then
			if type == 1 then
				system_outfit()
			elseif type == 2 then
				system_outfit()
				new_system_rad()
			elseif type == 3 then
				system_outfit()
				new_system_rad()
				new_system_power()
				new_anti_dot()
			elseif type == 4 then
				system_outfit()
				new_system_rad()
				new_system_power()
				new_anti_dot()                                        -- DMX UPGRADE OFF
			--else
				--is_pleer = false
			end
		end
	--else
		--is_pleer = false
	end
end

function on_item_drop(obj)
	if obj then
		local sect = obj:section()
		if sect then
			if sect == "doc_1" then						--1,8,10 spawn after monolith over
				doc_use()
			elseif sect == "doc_8" then
				doc_use_2()
			elseif sect == "doc_10" then
				doc_use_3()
			elseif sect == "dmx_skat15_upgrade" then  	-- syslov quest
				doc_use_4()
			end
		end
	end
end

function doc_use()
	local e1 = db.actor:object("exo_mil_exoskeleton")
	if e1 then
		con_skat_1 = e1:condition()
		--amk.remove_item_from_inventory(e1, db.actor)
		alife():release(alife():object(e1:id()))
		amk.spawn_item_in_inv("exo_mil_exoskeleton_add")
		flag_skat_1 = true
		news_manager.send_tip_txt(db.actor, "Upgrade Complete", nil, nil, 10000)
		alife():create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
	else
		amk.spawn_item_in_inv("doc_1")
	end
end

function doc_use_2()
	local e2 = db.actor:object("exo_mil_exoskeleton_add")
	if e2 then
		con_skat_2 = e2:condition()
		--amk.remove_item_from_inventory(e2, db.actor)
		alife():release(alife():object(e2:id()))
		amk.spawn_item_in_inv("exo_mil_exoskeleton_addr")
		flag_skat_2 = true
		news_manager.send_tip_txt(db.actor, "Upgrade Complete", nil, nil, 10000)
	else
		amk.spawn_item_in_inv("doc_8")
	end
end

function doc_use_3()
	local e3 = db.actor:object("exo_mil_exoskeleton_addr")
	local have_art_accum = db.actor:object("art_acumm")
	if e3 and have_art_accum then
		con_skat_3 = e3:condition()
		--amk.remove_item_from_inventory(e3, db.actor)
		alife():release(alife():object(e3:id()))
		amk.spawn_item_in_inv("exo_mil_exoskeleton_addx")
		flag_skat_3 = true
		news_manager.send_tip(db.actor, "Upgrade Complete", nil, nil, 10000)
	else
		if e3 then news_manager.send_tip_txt(db.actor, "Requires energy source", nil, nil, 10000) end
		amk.spawn_item_in_inv("doc_10")
	end
end

function doc_use_4()     -- DMX UPGRADE ON
	local e4 = db.actor:object("exo_mil_exoskeleton_addx")
	if e4 then
		con_skat_4 = e4:condition()
		--amk.remove_item_from_inventory(e4, db.actor)
		alife():release(alife():object(e4:id()))
		amk.spawn_item_in_inv("exo_mil_exoskeleton_dmx")
		flag_skat_4 = true
		news_manager.send_tip_txt(db.actor, "Upgrade Complete", nil, nil, 10000)
	else
		amk.spawn_item_in_inv("dmx_skat15_upgrade")
	end
end                      -- DMX UPGRADE OFF

function system_outfit()
	local act = db.actor
	if (act.health > 0.5) and (act:get_bleeding() <= 0.3) then 
		f_1 = false		f_1_end = false
		return 
	end
	if (act.health <= 0.5) and (not f_1) then	
	news_manager.send_tip_txt(act, TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."your health is below 50% of the normal state, if you have medical supplies, the life support system will automatically become engaged\\n", nil, nil, 30000)
	elseif (act:get_bleeding() > 0.3) and (not f_1) then	
		news_manager.send_tip_txt(act, TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."you are bleeding heavily ... if you have bandages ... the life support system will automatically become engaged\\n", nil, nil, 30000)
	end
	f_1 = true
	if (act.health <= 0.5) and act:object("medkit") then
		act:eat(act:object("medkit"))
		f_1 = false
	elseif (act.health <= 0.5) and act:object("medkit_army") then
		act:eat(act:object("medkit_army"))
		f_1 = false
	elseif (act.health <= 0.5) and act:object("medkit_scientic")   then
		act:eat(act:object("medkit_scientic"))
		f_1 = false
	elseif (act.health <= 0.5) and act:object("medkit_elite") then
		act:eat(act:object("medkit_elite"))
		f_1 = false
	elseif (act.health <= 0.5) and act:object("suvorotka")   then
		act:eat(act:object("suvorotka"))
		f_1 = false
	elseif act:get_bleeding() > 0.3 and act:object("bandage") then
		act:eat(act:object("bandage"))
		f_1 = false
	elseif act:get_bleeding() > 0.3 and act:object("bandage_dmx") then
		act:eat(act:object("bandage_dmx"))
		f_1 = false
	end
	if not f_1 then
		do_heal(true,TB3D_Services.get_text_color("system").."Medical Supplies found... Administering First-Aid Procedures...\\n")
		f_1_end = false
		return
	elseif not f_1_end then
		do_heal(false,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Medical Supplies not found...\\n")
		f_1_end = true
	end
end

function new_system_rad()
	local act = db.actor
	if act.radiation < 0.75 then 
		f_2 = false		f_2_end = false
		return 
	end
	if not f_2 then
		news_manager.send_tip_txt(act, TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."The resulting dose of radiation is close to being critical .. if you have the Antidote .. the System can remove radiation from the body, but with a dangerous drop in health\\n", nil, nil, 30000)
	end
	f_2 = true
	local anti_1 = act:object("antirad") 
	if (act.health <= 0.6) and anti_1 then
		act:eat(anti_1)
		do_heal(true,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Antidotes Found.. Administering them now ... antirad\\n")
		f_2 = false
		f_2_end = false
		return
	elseif (act.health <= 0.6) and not f_2_end then
		do_heal(false,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Antidotes Not Found.\\n")
		f_2_end = true
	end
end

function new_anti_dot()
	local act = db.actor
	if db.actor.psy_health >= 0.5 then
		f_3 = false		f_3_end = false
		return
	end
	if not f_3 then
		news_manager.send_tip_txt(act, TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Zombification process underway... If you have the Antidote, the System will automatically administer it for you\\n", nil, nil, 30000)
	end
	f_3 = true
	local a1 = act:object("antizombie") 
	if a1 then
		act:eat(a1)
		do_heal(true,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Antidote Found. Administering it now antirad.\\n")
		f_3 = false
		f_3_end = false
		return
	elseif not f_3_end then
		do_heal(false,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Antidote not found.\\n")
		f_3_end = true
	end
end

function new_system_power()
	local act = db.actor
	if act.power > 0.25 then 
		f_4 = false		f_4_end = false
		return 
	end
	if not f_4 then
		news_manager.send_tip_txt(act, TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."You are tired. Seeking Energy Sources now\\n", nil, nil, 30000)
	end
	f_4 = true
	local el = act:object("energy_drink") 
	if el then
		act:eat(el)
		do_heal(true,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").."Detected Energy Source.. Administering now.\\n")
		f_4 = false
		f_4_end = false
		return
	elseif not f_4_end then
		do_heal(false,TB3D_Services.get_text_color("system").."Life Support System:\\n"..TB3D_Services.get_text_color("system").." No Energy Sources Found.. You must rest.\\n")
		f_4_end = true
	end
end

function exo_in_section(item)
	local itm = item:section()
	if itm == "exo_mil_exoskeleton_addx" then
		alife():create(itm, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		alife():release(alife():object(item:id()))
	end
end

function delete_some_somth(section, count)
	news_manager.relocate_item(db.actor, "out", section, count)
	db.actor:iterate_inventory(
	function(dummy, item)
	if (count > 0) and (item:section() == section) then
		alife():release(alife():object(item:id()))
		count = count - 1
	end
	end,
	db.actor)
end

function do_heal(a,str)
	if a then
		play_snd([[meceniy\outfit\est_med]])
	else
		play_snd([[meceniy\outfit\net_med]])
	end
	news_manager.send_tip_txt(db.actor, str, nil, nil, 30000)
end

function play_snd(snd)
	local snd_obj = xr_sound.get_safe_sound_object(snd)
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
end
