-- TB3D 1.0.9.9.5.0 for new levels, 11502, 11503
function my_ver() return "1.0.9.9.5.0" end

--level changers: sid = destination
--if sid exists than create spot, does not include underground spots
local lc_table = {
[91] = "to_garbage",
[94] = "to_zaton",
[95] = "to_hiding",
[191] = "to_agroprom",
[192] = "to_agroprom",
[193] = "to_escape",
[194] = "to_bar",
[195] = "to_darkvalley",
[196] = "to_darkvalley",
[197] = "to_puzir",
[198] = "to_puzir",
[200] = "to_lostvillage",
[201] = "to_marsh",
[203] = "to_bar",
[209] = "to_vokzal",
[210] = "to_zaton",
[211] = "to_darkforest",
[212] = "to_poli",
[213] = "to_lostvillage",
[214] = "to_pripyat",
[231] = "to_npp",
[232] = "to_pred",
[241] = "to_hiding",
[242] = "to_prom",
--[251] = "to_aver",
--[252] = "to_peshera",
--[253] = "to_digger",
[256] = "to_yanold",
[257] = "to_hiding",
[258] = "to_pred",
[261] = "to_f1",
[262] = "to_prom",
[263] = "to_pred",
[266] = "to_escape",
[267] = "to_poli",
[268] = "to_darkvalley",
[271] = "to_kras",
[272] = "to_swampold",
[273] = "to_pogost",
[274] = "to_dd",
[275] = "to_vokzal",
[276] = "to_kras",
[277] = "to_pripyat",
[278] = "to_rinok",
[279] = "to_dd",
[280] = "to_dd",
[282] = "to_redforest",
--[284] = "to_jupunder",
[285] = "to_escape",
[286] = "to_darkscape",
[292] = "to_generators",
[293] = "to_kras",
[299] = "to_marsh",
[351] = "to_zaton",
[352] = "to_pripyat",
[356] = "to_deadcity",
[357] = "to_limansk",
[358] = "to_deadcity",
[359] = "to_redforest",
[360] = "to_marsh",
[362] = "to_lostvillage",
[363] = "to_hospital",
[364] = "to_deadcity",
[365] = "to_redforest",
[366] = "to_aver",
[367] = "to_north_aes",
[368] = "to_prom",
[391] = "to_garbage",
[392] = "to_garbage",
[415] = "to_garbage",
[416] = "to_garbage",
[417] = "to_escape",
[481] = "to_darkscape",
[592] = "to_military",
[593] = "to_garbage",
[594] = "to_bar",
[608] = "to_yantar",
[609] = "to_darkforest",
[771] = "to_bar",
[773] = "to_radar",
[832] = "to_aes",
[833] = "to_radar",
[834] = "to_eprip",
[925] = "to_rostok",
[1007] = "to_pripyat",
[1008] = "to_military",
[1223] = "to_generators",
[6000] = "to_pripyat",
[6001] = "to_pripyat",
[6002] = "to_darkvalley",
[6003] = "to_escape",
[6004] = "to_f1",
[6005] = "to_jupiter",
[6006] = "to_lostvillage",
[6007] = "to_pripyat",
[6008] = "to_jupiter",
[6009] = "to_zaton",
[6010] = "to_kras",
[6011] = "to_eprip",
[6012] = "to_deadcity",
[6013] = "to_pogost",
[6020] = "to_digger",
[6021] = "to_digger",
[6022] = "to_tunnels",
[9100] = "to_escape",
[9101] = "to_agroprom",
[9102] = "to_yantar",
[9103] = "to_agroprom",
[9104] = "to_military",
[9105] = "to_rostok",
[9106] = "to_radar",
[9107] = "to_darkvalley",
[9108] = "to_yantar",
[9109] = "to_radar",
[9110] = "to_military",
[9111] = "to_darkvalley",
[11500] = "to_puzir",
[11502] = "to_cave",
[11503] = "to_cave",
[11504] = "to_garbage",
[11505] = "to_agroprom",
[11506] = "to_darkvalley",
[11507] = "to_garbage",
[11508] = "to_darkvalley",
[11509] = "to_military",
--[11510] = "to_maze",
--[11511] = "to_aver",
--[11512] = "to_yantar",
[11513] = "to_aver",
[11514] = "to_aver",
[11515] = "to_maze",
[11516] = "to_limansk",
[11517] = "to_redforest",
[11518] = "to_hospital",
[11519] = "to_limansk",
[11521] = "to_swampold",
[11522] = "to_warlab",
[11523] = "to_yanold",
[11524] = "to_atp",
[11525] = "to_limansk",
[11526] = "to_radar",
[11527] = "to_puzir",
[11528] = "to_redforest",
[11529] = "to_limansk",
[11530] = "to_hospital",
[11531] = "to_hospital",
[11532] = "to_lostvillage",
[11533] = "to_military",
[11534] = "to_marsh",
[11535] = "to_marsh",
[11536] = "to_marsh",
[11537] = "to_escape",
[11538] = "to_escape",
[11539] = "to_agroprom",
[12501] = "to_garbage",
[12502] = "to_darkscape",
[12503] = "to_poli",
[12504] = "to_zaton",
[12506] = "to_aver",
[14002] = "to_marsh",
[14091] = "to_redforest",
[14101] = "to_limansk",
[18100] = "to_marsh",
[18101] = "to_generators",
[18109] = "to_lostvillage",
[18110] = "to_garbage",
[18111] = "to_brainlab",
[18112] = "to_yantar",
[18113] = "to_deadcity",
[18114] = "to_atp",
[21410] = "to_sarcofag",
[31410] = "to_labx10",
[31510] = "to_sarcofag",
[31610] = "to_north_aes",
[31710] = "to_sarcofag",
[33001] = "to_marsh",
[79891] = "to_north_aes",
[97000] = "to_yanold",
[97001] = "to_atp",
[97021] = "to_maze",
[97041] = "to_pripyat",
[97071] = "to_puzir",
[97081] = "to_cave",
[97091] = "to_military",
--[97092] = "to_escape",	--hidden lc on rocks in atp
[97093] = "to_garbage",
[97094] = "to_warlab",
[97098] = "to_warlab",
[97099] = "to_atp",
[97100] = "to_lostvillage",
[97101] = "to_darkforest",
[97102] = "to_aes",
[97103] = "to_generators",
[97104] = "to_agroprom",
[97105] = "to_marsh",
[97106] = "to_pripyat",
[97107] = "to_generators",
[97108] = "to_warlab",
[97109] = "to_limansk",
[97110] = "to_atp",
[97111] = "to_bar",
[97112] = "to_deadcity",
[97113] = "to_zaton",
[97114] = "to_deadcity",
[97115] = "to_eprip",
[97116] = "to_pripyat_n",
[97117] = "to_pripyat_s",
[97118] = "to_labx8",
--[97119] = "to_eprip",
[98000] = "to_jupiter",
[98001] = "to_eprip",
[98002] = "to_jupiter",
[98003] = "to_jupunder",
[98005] = "to_zaton",
[98007] = "to_rostok",
[98008] = "to_yantar",
[98009] = "to_jupunder",
[98010] = "to_deadcity",
[98011] = "to_yanold",
[98012] = "to_pred",
[98013] = "to_prom",
[98017] = "to_generators",
[98018] = "to_deadcity",
[98019] = "to_aes",
[98020] = "to_north_aes",
[98021] = "to_aes",
[98022] = "to_prom",
[98023] = "to_swampold",
[98024] = "to_kras",
[98025] = "to_rinok",
[98026] = "to_limansk",
[98027] = "to_vokzal",
[98030] = "to_north_aes",
[98031] = "to_aver",
[98032] = "to_bar",
[98033] = "to_yanold",
[98034] = "to_generators",
[98035] = "to_prom",
[98997] = "to_zaton"
}

function set_spots()
	for i = 90, 99000 do
		if lc_table[i] then set_spot(i) end
	end
end

function set_spot(sid)
	if lc_table[sid] then
		local obj = alife():story_object(sid)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", lc_table[sid]) --utils.to_str(sid))
		end
	end
end

function clear_under_spots(sname)
	local obj
	if sname=="l12u_sarcofag" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98998)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(98999)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif lname=="peshera" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(251)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif lname=="av_peshera" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(252)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(253)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(97119)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(11510)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(11512)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(11511)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif lname=="digger_stash" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6015)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(6016)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif lname=="l04u_labx18" then													--hide the spots, not in tb3d_spots()
	elseif lname=="l08u_brainlab" then													--hide the spots, not in tb3d_spots()
	elseif lname=="l03u_agr_underground" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6014)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(6019)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif lname=="l12u_control_monolith" then													--hide the spots, not in tb3d_spots()
	elseif sname=="jupiter_underground" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98004)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(98006)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(98016)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(98028)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif sname=="l10u_bunker" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98029)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif sname=="labx8" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98015)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif sname=="warlab" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(97095)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(97096)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(97097)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif sname=="digger_stash" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6015)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(6016)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	elseif sname=="lab_x14" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6017)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(6018)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
		obj = alife():story_object(284)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 1 then
			level.map_remove_object_spot(obj.id, "level_changer")
		end
	end
end

function show_under_spots(lname)
	local obj
	if lname=="l12u_sarcofag" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98998)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98998)
		end
		obj = alife():story_object(98999)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98999)
		end
	elseif lname=="peshera" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(251)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 251)
		end
	elseif lname=="av_peshera" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(252)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 252)
		end
		obj = alife():story_object(253)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 253)
		end
		obj = alife():story_object(97119)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 97119)
		end
		obj = alife():story_object(11510)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 11510)
		end
		obj = alife():story_object(11512)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 11512)
		end
		obj = alife():story_object(11511)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 11511)
		end
	elseif lname=="digger_stash" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6015)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6015)
		end
		obj = alife():story_object(6016)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6016)
		end
	elseif lname=="l04u_labx18" then													--hide the spots, not in tb3d_spots()
	elseif lname=="l08u_brainlab" then													--hide the spots, not in tb3d_spots()
	elseif lname=="l03u_agr_underground" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6014)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6014)
		end
		obj = alife():story_object(6019)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6019)
		end
	elseif lname=="l12u_control_monolith" then													--hide the spots, not in tb3d_spots()
	elseif lname=="jupiter_underground" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98004)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98004)
		end
		obj = alife():story_object(98006)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98006)
		end
		obj = alife():story_object(98016)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98016)
		end
		obj = alife():story_object(98028)
		if obj and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98028)
		end
	elseif lname=="l10u_bunker" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98029)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98029)
		end
	elseif lname=="labx8" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(98015)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 98015)
		end
	elseif lname=="warlab" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(97095)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 97095)
		end
		obj = alife():story_object(97096)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 97096)
		end
		obj = alife():story_object(97097)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 97097)
		end
	elseif lname=="digger_stash" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6015)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6015)
		end
		obj = alife():story_object(6016)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6016)
		end
	elseif lname=="lab_x14" then													--hide the spots, not in tb3d_spots()
		obj = alife():story_object(6017)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6017)
		end
		obj = alife():story_object(6018)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 6018)
		end
		obj = alife():story_object(284)
		if obj  and level.map_has_object_spot(obj.id, "level_changer") == 0 then
			level.map_add_object_spot(obj.id, "level_changer", 284)
		end
	end
end