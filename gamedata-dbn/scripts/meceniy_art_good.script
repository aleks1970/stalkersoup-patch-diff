--TB3D 1.0.4e
--\\* Module .. "artifact for a suit, and spawn artov after the release of" .. Spot (Shooter) ..
--\--nafig rewritten all but invisible by Monnoroch

local last_time
local full_charge = 700
local last_charge = full_charge

local t_upd = 0
local t_upd_delta = 1000

local art_on_level={ -- flew! complement! no level - no artov!
	l01_escape		= {lvid=595409, gvid=44, count = 1},
	l02_garbage		= {lvid=382603, gvid=265, count = 2},
	l03_agroprom	     = {lvid=437401, gvid=693, count = 2},
	l04_darkvalley  	= {lvid=392507, gvid=813, count = 4},
	l05_bar			= {lvid=99508, gvid=1233, count = 2},
	l06_rostok		= {lvid=67703,	 gvid=1311, count = 3},
	l07_military	     = {lvid=418208, gvid=1546, count = 4},
	l08_yantar		= {lvid=141401, gvid=1440, count = 3},
	l11_pripyat		= {lvid=261209, gvid=2269, count = 1}
}

function on_actor_update()
	if t_upd > time_global() then return end --most mnogootsekayuschaya check

	t_upd = time_global() + t_upd_delta
local outfit = db.actor:item_in_slot(6)
	if not outfit or outfit:section() ~= "exo_mil_exoskeleton_addrs" then
		last_time = nil -- If not, then taking a dressing costume while using art-battery will be considered since its last use
return
end

exo_update(outfit)
end

function exo_update(item)
	local have_art_accum = db.actor:object("art_acumm")
	if not have_art_accum then
		alife():create(item:section(), db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
		alife():release(alife():object(item:id()))
		last_time = nil -- if you do not, then the appearance in the inventory of new art, the battery will be considered that it had been used since the last discharge of the battery
return
end
	
	if not last_time then -- just at the same time there is an art battery pack and wearing a suit
last_time = game.get_game_time()
return
end
	
local tm_diff = game.get_game_time():diffSec(last_time)
if tm_diff > 0 then
last_time = game.get_game_time()
		last_charge = last_charge - tm_diff * 0.1   
if last_charge <= 0 then
last_charge = full_charge
			meceniy_utils.delete_some_somth("art_acumm", 1)
end
end
end

function art_respawn()
local timeh =level.get_time_hours()
	if timeh == 22 and db.actor:dont_has_info("art_mec_spawn")  then
		--for k,v in pairs(art_on_level) do
			--art_spawn("art_acumm", k)
			art_spawn("art_acumm", level.name())
		--end
		db.actor:give_info_portion("art_mec_spawn")
	end
	
	if timeh == 23 and db.actor:has_info("art_mec_spawn") then
		db.actor:disable_info_portion("art_mec_spawn")
	end
end

function art_respawn_test()
	--local timeh =level.get_time_hours()
	--if timeh == 22 and db.actor:dont_has_info("art_mec_spawn")  then
		--for k,v in pairs(art_on_level) do
			art_spawn("art_acumm", level.name())
		--end
		--db.actor:give_info_portion("art_mec_spawn")
	--end
	
	--if timeh == 23 and db.actor:has_info("art_mec_spawn") then
		--db.actor:disable_info_portion("art_mec_spawn")
	--end
end

--OGSM 2.3.1 Ultimate (DEXXX)
function art_spawn(section, level_name)
	if level_name and art_on_level[level_name] then
local lv
	if level_name == "l07_military" then -- and what is so special ?????
		lv = 200000 + math.random(-100000, 100000)
	else 
		lv = math.random(art_on_level[level_name]["lvid"])
	end
	local gv = art_on_level[level_name]["gvid"]
		if not game_graph():valid_vertex_id(gv) then
			if TB3D_Modders.use_abort_message == true then TB3D_Services.abort_alert("MEC ART: art_spawn gv invalid: "..gv) end
		end
	for ind = 1, art_on_level[level_name]["count"] do
alife():create(section, level.vertex_position(lv), lv, gv)
			--alife():create(section, game_graph():vertex(gv):level_point(), lv, gv)
		end
end
end
--OGSM 2.3.1 Ultimate (DEXXX) end