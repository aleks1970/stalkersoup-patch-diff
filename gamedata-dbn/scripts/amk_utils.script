-- TB3D 1.0.9.9.4.4, optimized db.actor 
function my_ver() return "1.0.9.9.4.4" end
--[[
File:  amk_utils .script
Created:  23.05.2008
Copyright:  © 2008 AMK team
Version:  1.1.0.5
--]]

-- *			                         Inventory					       *
--Cache the current state of equipment HS (only items checked function inventory_search, they are usually a bit)
--Structure: [sektsiya_predmeta] = kolichestvo_v_inventare
--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
local InventoryState = {}

--Check the number of items in the actor inventory
function inventory_search(iItemSection, iNeededCount)
	--TB3D_Services.info_alert("amk utils: inventory_search["..utils.to_str(iItemSection).."]["..utils.to_str(iNeededCount).."]["..utils.to_str(type(iItemSection)).."]")
	--Cached current state of the inventory:
	local vCount = InventoryState[iItemSection]
	--TB3D_Services.info_alert("amk utils: inventory_search: cached vCount = ["..utils.to_str(vCount).."]")
	--Download the current status of inventory in the cache:
	if vCount == nil then
		vCount = 0
		db.actor:iterate_inventory(function (dummy, vItem)
				if vItem:section() == iItemSection then
					vCount = vCount + 1 
				end 
			end, nil)
		InventoryState[iItemSection] = vCount
		--TB3D_Services.info_alert("amk utils: inventory_search: saved in cache["..utils.to_str(vCount).."]")
	end
	--Issuance of the check result:
	return vCount >= iNeededCount
end

--Handler appearance or disappearance of the object in your inventory (you need to update the cache):
function inventory_update(iObject, iCountDelta)
	if iObject == nil then return end
	local vItemSection = iObject:section()
	--get_console():execute("load ~~~ inventory_update: " .. vItemSection .. ", " .. iCountDelta .. ", " .. type(vItemSection))
	--Cached current state of the inventory:
	local vCount = InventoryState[vItemSection]
	--get_console():execute("load ~~~ inventory_update: cached vCount = " .. (vCount or "(null)"))
	--Update the current status of inventory in the cache:
	if vCount ~= nil then
		vCount = vCount + iCountDelta
		InventoryState[vItemSection] = vCount
		--get_console():execute("load ~~~ inventory_update: saved in cache: " .. vCount)
	end
end

--Check for item in actor inventory
function have_a_item(itemS)
    if db.actor ~= nil and db.actor:object(itemS) ~= nil then
		return true
	else
		return false
	end
end

--Check for and issuance of item info portion
function have_a_item_info(itemS, info)
    if db.actor ~= nil and db.actor:object(itemS) ~= nil and not has_alife_info(info) then
		TB3D_Services.give_info(info)
	end
end

--Check info portion
function have_a_info(info_has, not_info_has)
	if has_alife_info(info_has) and not has_alife_info(not_info_has) then
		return true
	else
		return false
	end
end

--Checking the money he
function actor_has_money(money)
	if db.actor:money() >= money then
		return true
	else
		return false
	end
end

--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
-- *			                         Transfers					       *
--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

--Transfer money between actor and NPCs
function actor_give_money(npcObj, actorObj, money, Type)
	local actor, npc
	if db.actor and db.actor:id() == npc:id() then
		actor = npcObj
		npc = actorObj
	else
		actor = actorObj
		npc = npcObj
	end
	if Type == "out" then
		dialogs.relocate_money(npc, money, "out")
	elseif Type == "in" then 
		dialogs.relocate_money(npc, money, "in")
	end
end

--Transfer objects between actor and NPCs
function actor_give_item(npcObj, actorObj, itemS, Type)
	local actor, npc
	if db.actor and db.actor:id() == npc:id() then
		actor = npcObj
		npc = actorObj
	else
		actor = actorObj
		npc = npcObj
	end
	if Type == "out" then
		dialogs.relocate_item_section(npc, itemS, "out")
	elseif Type == "in" then 
		dialogs.relocate_item_section(npc, itemS, "in")
	end
end

--[[Transfer items between actor and NPCs   109944 moved to flamethrower.script
function relocate_n_items_section(victim, section, Type, count)
	TB3D_Services.packet_alert("amk utils: transfer item")
    if db.actor and victim then
		local cnt = count
		if cnt and cnt > 0 then
			if Type == "in" then
				for i=1, cnt do
					alife():create(section,
						db.actor:position(),
						db.actor:level_vertex_id(),
						db.actor:game_vertex_id(),
						db.actor:id())
				end
			elseif Type == "out" then
				if TB3D_Modders.use_inventory_message == true then TB3D_Services.packet_alert("amk utils: relocate ["..utils.to_str(cnt).."] items iterate inventory") end
				db.actor:iterate_inventory(function (dummy,item) if item and item:section() == section and cnt > 0 then db.actor:transfer_item(item, victim) cnt = cnt - 1 end end, nil)
			end
			news_manager.relocate_item(db.actor, Type, section, cnt)
		end
    end
end]]--

